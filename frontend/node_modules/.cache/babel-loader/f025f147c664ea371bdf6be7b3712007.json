{"ast":null,"code":"var _jsxFileName = \"/home/dkova/projetos/dsmovie/frontend/src/pages/Listing/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport MovieCard from \"components/MovieCard\";\nimport Pagination from \"components/Pagination\";\nimport { useEffect, useState } from \"react\";\nimport { BASE_URL } from \"utils/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Listing() {\n  _s();\n\n  // youtube: javascript promisses\n  // use state\n\n  /*\n  Hook: useState\n  Manter estado no componente\n  */\n  const [pageNumber, setPageNumber] = useState(0);\n  const [page, setPage] = useState({\n    content: [],\n    last: true,\n    totalPages: 0,\n    totalElements: 0,\n    size: 12,\n    number: 0,\n    first: true,\n    numberOfElements: 0,\n    empty: true\n  });\n  /*\n  Hook: useEffect\n  Executar algo na instanciação ou destruição do componente, observar estado\n  */\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/movies?size=12&page=${pageNumber}&sort=title`).then(response => {\n      //console.log(response.data);\n      const data = response.data;\n      setPage(data); //setPageNumber(data.number);\n    });\n  }, [pageNumber]);\n\n  const handlePageChange = newPageNumber => {\n    setPageNumber(newPageNumber);\n  };\n  /*NOTA: em uma renderização dinâmica de coleção, cada elemento renderizado DEVE possuir um atributo key.*/\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      onChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: page.content.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6 col-lg-4 col-xl-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Listing, \"aIaWCqb9O6ex6E7H8x0KTbirkW0=\");\n\n_c = Listing;\nexport default Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"sources":["/home/dkova/projetos/dsmovie/frontend/src/pages/Listing/index.tsx"],"names":["axios","MovieCard","Pagination","useEffect","useState","BASE_URL","Listing","pageNumber","setPageNumber","page","setPage","content","last","totalPages","totalElements","size","number","first","numberOfElements","empty","get","then","response","data","handlePageChange","newPageNumber","map","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;;;AAEA,SAASC,OAAT,GAAkB;AAAA;;AAEd;AACA;;AACA;AACJ;AACA;AACA;AACI,QAAK,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAK,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAY;AACvCO,IAAAA,OAAO,EAAE,EAD8B;AAEvCC,IAAAA,IAAI,EAAE,IAFiC;AAGvCC,IAAAA,UAAU,EAAE,CAH2B;AAIvCC,IAAAA,aAAa,EAAE,CAJwB;AAKvCC,IAAAA,IAAI,EAAE,EALiC;AAMvCC,IAAAA,MAAM,EAAE,CAN+B;AAOvCC,IAAAA,KAAK,EAAE,IAPgC;AAQvCC,IAAAA,gBAAgB,EAAE,CARqB;AASvCC,IAAAA,KAAK,EAAE;AATgC,GAAZ,CAA/B;AAYA;AACJ;AACA;AACA;;AACIhB,EAAAA,SAAS,CAAC,MAAM;AACZH,IAAAA,KAAK,CAACoB,GAAN,CAAW,GAAEf,QAAS,wBAAuBE,UAAW,aAAxD,EACCc,IADD,CACMC,QAAQ,IAAI;AACd;AACA,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAb,MAAAA,OAAO,CAACa,IAAD,CAAP,CAHc,CAId;AACH,KAND;AAOH,GARQ,EAQN,CAAChB,UAAD,CARM,CAAT;;AAWA,QAAMiB,gBAAgB,GAAIC,aAAD,IAA2B;AAChDjB,IAAAA,aAAa,CAACiB,aAAD,CAAb;AACH,GAFD;AAKA;;;AACA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEhB,IAAlB;AAAwB,MAAA,QAAQ,EAAEe;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKf,IAAI,CAACE,OAAL,CAAae,GAAb,CAAiBC,KAAK,iBACnB;AAAoB,UAAA,SAAS,EAAC,iCAA9B;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUA,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAiBH;;GA3DQtB,O;;KAAAA,O;AA6DT,eAAeA,OAAf","sourcesContent":["import axios from \"axios\";\nimport MovieCard from \"components/MovieCard\";\nimport Pagination from \"components/Pagination\";\nimport { useEffect, useState } from \"react\";\nimport { MoviePage } from \"types/movie\";\nimport { BASE_URL } from \"utils/requests\";\n\nfunction Listing(){\n\n    // youtube: javascript promisses\n    // use state\n    /*\n    Hook: useState\n    Manter estado no componente\n    */\n    const[pageNumber, setPageNumber] = useState(0);\n    const[page, setPage] = useState<MoviePage>({\n        content: [],\n        last: true,\n        totalPages: 0,\n        totalElements: 0,\n        size: 12,\n        number: 0,\n        first: true,\n        numberOfElements: 0,\n        empty: true\n    });\n\n    /*\n    Hook: useEffect\n    Executar algo na instanciação ou destruição do componente, observar estado\n    */\n    useEffect(() => {\n        axios.get(`${BASE_URL}/movies?size=12&page=${pageNumber}&sort=title`)\n        .then(response => {\n            //console.log(response.data);\n            const data = response.data as MoviePage;\n            setPage(data);\n            //setPageNumber(data.number);\n        });\n    }, [pageNumber]);\n\n\n    const handlePageChange = (newPageNumber: number) => {\n        setPageNumber(newPageNumber);\n    } \n\n\n    /*NOTA: em uma renderização dinâmica de coleção, cada elemento renderizado DEVE possuir um atributo key.*/\n    return(\n      <>\n        <Pagination page={page} onChange={handlePageChange} />\n\n        <div className=\"container\">\n            <div className=\"row\">\n                {page.content.map(movie => (\n                    <div key={movie.id} className=\"col-sm-6 col-lg-4 col-xl-3 mb-3\" >\n                        <MovieCard movie={movie} />\n                    </div> \n                    )\n                )}                                \n            </div>\n        </div>\n      </>\n    );\n\n}\n\nexport default Listing;"]},"metadata":{},"sourceType":"module"}